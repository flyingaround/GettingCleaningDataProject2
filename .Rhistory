day(this_day)
wday(this_day)
wday(this_day, lable = TRUE)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment < uppdate(thismoment, hours = 15, minutes = 32)
this_moment < update(thismoment, hours = 15, minutes = 32)
this_moment < update(this_moment, hours = 15, minutes = 32)
this_moment <- update(this_moment, hours = 15, minutes = 32)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart + hours(17) + minutes (34))
update(depart + hours(17) + minutes (34))
depart <- update(depart, hours = hours + 17, minutes = minutes + 34)
depart <- update(depart, depart + hours(17) + minutes(34))
depart+hours(17)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval)
?new_interval()
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(ggplot2)
str(mpg)
str(maacs)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?trellis.par.set
library(datasets)
data(airquality)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
ls
ls()
?ggplot
a = "<meta name="Distribution" content="Global" />"
a <- "<meta name="Distribution" content="Global" />"
length("<meta name="Distribution" content="Global" />")
length("<meta name="Distribution" content="Global" />)
length("<meta name="Distribution" content="Global" />")
length('<meta name="Distribution" content="Global" />')
nchar('<meta name="Distribution" content="Global" />')
nchar('<script type="text/javascript">')
nchar(' })();')
nchar('  })();')
nchar()
nchar('				<ul class="sidemenu">')
swirl()
library(swirl)
rm(list=ls())
swilr()
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, col = "red")
5
12
abline(h = 0.05, col = "green")
dis(dFsm)
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmat(mt)
heatmap(mt)
mt
denmt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange"))
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x,y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx,newCy, pch = 8, cex = 2, col = cols1)
points(newCx,newCy, pch = 8, cex = 2, col = cols1, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(y, newClust2, mean)
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx,finalCy, pch = 9, cex = 2, lwd= 2)
points(finalCx,finalCy, pch = 9, cex = 2, lwd= 2, col = cols1)
kmeans(dataFrame, 3)
kmObj$iter
plot(x,y, col = kmobj$cluster, pch = 10, cex = 2)
plot(x,y, col = kmObj$cluster, pch = 10, cex = 2)
plot(x,y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x,y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
heat(dataMatrix)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% mmat
matu %*% diag %*% matv
matu %*% diag %*% t(matv)
svd(scale(mat))
scale(mat)
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2 <- svd(constantMatrix)
svd2$d
svd2$v[,2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]*svd1$d[1])*svd1$v
a1 <- (svd1$u[,1]*svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2]%*%diag(svd1$d[1:2])) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd, 562:563)
names(ssd)[562:563]
names(ssd[562:563])
table(ssd$subject)
sum(table$ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(midst)
hclustering <- hclust(mdist)
plot(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dis(sub1[, 10:12])
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdis <- dist(c(sub1[,10:12], mamaxCon)
)
mdis <- dist(c(sub1[,10:12], maxCon)
)
mdis <- dist(cbind(sub1[,10:12], maxCon)
)
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], 6)
table(kCluster$cluste,r sub1$activity)
table(kCluster$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size ==29)
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(kClust$centers[1:3])
names(sub1[, 1:3])
walkdown <- wihch(kClust$size == 49)
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
setwd("C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/W4")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, "housing.csv")
housing <- read.csv("housing.csv")
strsplit(housing$wgtp)[123]
strsplit(housing$wgtp)
nam <- names(housing)
nam
strsplit(nam, "wgtp")
strsplit(nam, "wgtp")[123]
url2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url2, "gdp.csv")
gdp <- read.csv("gdp.csv")
names(gdp)
names(gdp)[2] <- "GDP"
gdp$GDP
gdp <- read.csv("gdp.csv", skip = 3, nrow = 191)
gdp
gdp <- read.csv("gdp.csv", skip = 4, nrow = 191)
gdp
names(gdp)
names(gdp)[2] <- "GDP"
gdp$GDP
names(gdp)[5] <- "GDP"
names(gdp)[5] <- "GDP1"
gdp%GDP1
gdp$GDP1
dat <- gsub(",", "", gdp$GDP1)
mean(dat)
dat
dat <- as.numeric(gsub(",", "", gdp$GDP1))
mean(data, na.rm = TRUE)
mean(dat, na.rm = TRUE)
head(gdp)
grep("^United", gdp$X.3)
grep("^United", gdp$X.3, value = TRUE)
url2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url2, "education.csv")
education <- read.csv("education.csv")
head*education
head(education)
names(education)
gdP <- gdp[,6]
gdp
gdp <- gdp[ , 6]
gdp
gdp <- read.csv("gdp.csv", skip = 4, nrow = 191)
gdp <- gdp[ , 1:6]
gdp
neames(gdp)
names(gdp)
gdp$X.1
gdp$X.2
gdp$X.3
head(gdp)
GDP <- gdp[ ,c(1,2,4,5)]
GDP
GDP <- GDP[1:190, ]
GDP
names(GDP) <- c("rank", "Code", "Country Name", "GDP")
GDP
head(GDP)
GDP_edu <- merge(GDP, education, by.x = "Code", by.y = "CountryCode")
GDP_edu
names(GDP_edu
)
grep("fiscal", names(GDP_edu))
grep("year", names(GDP_edu))
grep("Fiscal", names(GDP_edu))
head(GDP_edu)
GDP_edu <- merge(GDP, education, by.x = "Code", by.y = "CountryCode")
names(education)
?merge
GDP_edu <- merge(GDP, education, by.x = "Code", by.y = "CountryCode", all = TRUE)
names(GDP_edu)
head(GDP)
tail(GDP)
tail(GDP_edu)
names(GDP)
GDP_edu <- merge(GDP, education, by.x = "Code", by.y = "CountryCode", all = FALSE)
names(GDP)[2] <- "CountryCode"
GDP_edu <- merge(GDP, education)
GDP_edu
GDP_edu$CountryCode
GD$CountryCode
GDP$CountryCode
head(GDP)
names(GDP)[2] <- "Rank"
names(GDP)[1] <- "Code"
GDP_edu <- merge(GDP, education, by.x = "Code", by.y = "CountryCode", all = FALSE)
grep("[Ff]iscal", names(GDP_edu))
head(GDP_edu$National.accounts.base.year)
head(GDP_edu$National.accounts.reference.year)
head(GDP_edu)
head(GDP_edu, 1)
head(GDP_edu, 5)
grep("[Jj]une", GDP_edu)
grep("[J]june", GDP_edu$Special.Notes))
grep("[J]june", GDP_edu$Special.Notes))
grep("[J]june", GDP_edu$Special.Notes)
grep("June", GDP_edu$Special.Notes)
grep("[Jj]une", GDP_edu$Special.Notes)
length(grep("[Jj]une", GDP_edu$Special.Notes))
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(amzn)
names(amzn)
amzn[ ,1]
day <- strsplit(amzn[ ,1], " ")
amzn[ ,1] <- as.character(amzn[ ,1])
day <- strsplit(amzn[ ,1], " ")
day
head(day)
day <- strsplit(amzn[ ,1], " ")[1]
day
amzn[ ,1]
table(grepl("^2012", amzn[ ,1]))
?amzn
?quantmod
row.names(amzn)
names(amz)
names(amzn)
table(year(sampleTimes), weekdays(sampleTimes))
sampleTimes
year(sampleTimes)
library(lubridate)
year(sampleTimes)
table(year(sampleTimes), weekdays(sampleTimes))
sum(year(sampleTimes) == 2012)
grep("fiscal year end: june", tolower(GDP_edu$Special.Notes))
length(grep("fiscal year end: june", tolower(GDP_edu$Special.Notes)))
setwd("C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2")
rm(list=ls())
getwd
getwd()
setwd(getwd())
getwd()
cd..
setwd("C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2")
a <- read.table(".\UCI HAR Dataset\activity_labels.txt"")
a <- read.table(".\UCI HAR Dataset\activity_labels.txt")
setwd("C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning
Data/Project2/UCI HAR Dataset")
setwd("C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning ...
Data/Project2/UCI HAR Dataset")
setwd("C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/UCI HAR Dataset")
a <- read.table("./activity_labels.txt"")
q
qqq
a <- read.table("./activity_lables.txt")
a <- read.table("./activity_labels.txt")
a
features <- read.table("./features.txt")
head(features)
colnames(activity) <- c("activitylabel", "activity")
colnames(features) <- c("featurelabel", "feature")
# read activity labels and features from root directory
activity <- read.table("./activity_labels.txt")
features <- read.table("./features.txt")
# Assign appropritate col names to activity and features
colnames(activity) <- c("activitylabel", "activity")
colnames(features) <- c("featurelabel", "feature")
activity
colnames(activity) <- c("activity label", "activity")
colnames(features) <- c("feature label", "feature")
activity
features
train_data_activity <- read.table("./train/y_train.txt")
train_data_activity
train_data_set <- read.table("./train/x-train.txt")
train_data_set <- read.table("./train/X-train.txt")
train_data_set <- read.table("./train/X_train.txt")
head(train_data_set)
features
colnames(train_data_set) <- features$feature
names(train_data_set)
#read test set data and assign appropriate data label
test_data_activity <- read.table("./test/y_train.txt")
colnames(test_data_activity) <- "activity label"
test_data_set <- read.table("./test/X_train.txt")
#col names in data set should be the feature names
colnames(test_data_set) <- features$feature
#read test set data and assign appropriate data label
test_data_activity <- read.table("./test/y_test.txt")
colnames(test_data_activity) <- "activity label"
test_data_set <- read.table("./test/X_test.txt")
#col names in data set should be the feature names
colnames(test_data_set) <- features$feature
subject_train <- read.table("./train/subject_train.txt")
subject_train
source('C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
colnam <- names(data_combine)
colnam
ind <- grep("mean()|std()", colnam)
ind
source('C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
source('C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
data_mean_stdev <- cbind(data_combine[ , ind],
data_combine$subjectID, data_combine$activityID)
View(test_combine)
?as.factor
a <- data.combine$activityID
a <- data_combine$activityID
a
b <- as.factor(a, levels(activityID))
b <- as.factor(a)
a
b <- as.factor(a, labels = activityID)
b <- factor(a, levels = activityID)
b <- factor(a, levels = activity$activityID)
b
b <- factor(a, levels = activity$activityID, lables = levels)
b <- factor(a, lables = activity$activityID)
data_mean_stdev$activityID <- factor(data_mean_stdev$activityID,
levels = activity$activityID,
labels = activity$activity)
head(data_mean_stdev)
ind <- grep("mean()|std()|activityID|subjectID", colnam)
#extract only mean and standard deviation and combine with subjectID and activity ID
data_mean_stdev <- cbind(data_combine[ , ind],
data_combine$subjectID, data_combine$activityID)
ind <- grep("mean()|std()|activityID|subjectID", colnam)
#extract only mean and standard deviation and combine with subjectID and activity ID
data_mean_stdev <- cbind(data_combine[ , ind],
data_combine$subjectID, data_combine$activityID)
)
data_mean_stdev <- cbind(data_combine[ , ind])
names(data_mean_stdev)
data_mean_stdev$activityID <- factor(data_mean_stdev$activityID,
levels = activity$activityID,
labels = activity$activity)
data_mean_stdev$subjectID <- as.factor(data_mean_stdev$subjectID)
class(data_mean_stdev$activityID)
c <- names(data_mean_stdev)
gsub("^t", "TIMe")
gsub("^t", "time", c)
colnam <- names(data_mean_stdev)
gsub("\()", "", names(data_mean_stdev)
gsub("\\()", "", names(data_mean_stdev)
)
ind <- grep("(mean())|(std())|activityID|subjectID", colnam)
ind
length(ind)
ind <- grep("(-mean()-)|(-std()-)|activityID|subjectID", colnam)
length(ind)
ind <- grep("(-mean()-)"|"(-std()-)"|"activityID"|"subjectID", colnam)
ind <- grep("-mean()-"|"-std()-"|"activityID"|"subjectID", colnam)
ind <- grep("-mean\\()-"|"-std\\()-"|"activityID"|"subjectID", colnam)
ind <- grep("-mean\\()-|"-std\\()-|activityID|subjectID", colnam)
ind <- grep("-mean\\()-|-std\\()-|activityID|subjectID", colnam)
length(ind)
colnam(ind)
colnam[ind]
source('C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
source('C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
download.file(URL, filename)
source('C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
?unzip
filename <- "UCIHAR.zip"
if (!file.exists(filename)){
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
download.file(URL, filename)
}
setwd("C:/Users/zhouxi/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2")
rm(list = ls())
if (!file.exists(filename)){
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
download.file(URL, filename)
}
if (!file.exists("UCI HAR Dataset")) {
unzip(filename)
}
filename <- "UCIHAR.zip"
## Download and unzip the dataset:
if (!file.exists(filename)){
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip "
download.file(URL, filename)
}
if (!file.exists("UCI HAR Dataset")) {
unzip(filename)
}
unzip(filename)
?unzip
source('C:/Users/Xiang/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
names(allData_mean)
source('C:/Users/Xiang/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
source('C:/Users/Xiang/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
source('C:/Users/Xiang/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
source('C:/Users/Xiang/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
source('C:/Users/Xiang/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
source('C:/Users/Xiang/OneDrive/Family/Xiang/Coursera/Getting and Cleaning Data/Project2/run_analysis.R')
